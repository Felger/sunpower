#+TITLE: Sunpower
#+DESCRIPTION: Unofficial tests of apparent Sunpower API

[[https://codeclimate.com/github/jeffkowalski/sunpower/badges/gpa.svg]]

* API points
** from [[https://monitor.us.sunpower.com/v08122019100840/environment.js][environment.js]]
#+BEGIN_SRC javascript
w.__envapidom = 'https://elhapi.edp.sunpower.com/';
#+END_SRC

** from [[https://monitor.us.sunpower.com/v10162019041847/envcfg.js][envcfg.js]]:
#+BEGIN_SRC javascript
__env = {
    SP_ELH_VERSION: 'SP_ELH_VERSION_2', // SP_ELH_VERSION must match SP_ELH_VERSION lambda variable in ElhApi cloudformation
    ELH_API_USER: w.__envapidom + 'v1/elh/user/',
    ELH_API_ADDRESS: w.__envapidom + 'v1/elh/address/',
    ELH_API_ADDRESS_V2: w.__envapidom + 'v2/elh/address/',
    ELH_API_ASYNC_RESULT: w.__envapidom + 'v1/elh/asyncResult',
    ELH_API_PASSWORD_RESET: w.__envapidom + 'v1/elh/passwordreset/',
    ELH_API_AUTHENTICATE: w.__envapidom + 'v1/elh/authenticate',
    ELH_API_SESSION: w.__envapidom + 'v1/elh/session',
    ELH_API_AUTHENTICATEKIOSK: w.__envapidom + 'v1/elh/authenticatekiosk',
    ELH_API_FEEDBACK: w.__envapidom + 'v1/elh/processFeedback',
    ELH_API_CHECK_EMAIL: w.__envapidom + 'v1/elh/register/checkEmail',
    ELP_API_VALIDATE_SN: w.__envapidom + 'v1/elh/register/validateSerial/',
    ELH_API_CREATE_ACCOUNT: w.__envapidom + 'v1/elh/register/createAccount',
    ELH_API_SEND_ACCOUNT_NOTIFICATION: w.__envapidom + 'v1/elh/register/sendAccountNotification',
    ELH_API_VALIDATE_EMAIL: w.__envapidom + 'v1/elh/register/validateEmail',
    ELH_API_COLLECTOR: w.__envapidom + 'v1/elh/wifi/collector',
    ELH_API_DEVICE_STATUS: w.__envapidom + 'v1/elh/wifi/status',
    ELH_API_WIFI_NETWORKS: w.__envapidom + 'v1/elh/wifi/networks',
    ELH_API_SET_WIFI_NETWORK: w.__envapidom + 'v1/elh/wifi/setNetwork',
    ELH_API_SET_WIFI_NETWORK_STATUS: w.__envapidom + 'v1/elh/wifi/setNetwork/status',
    ELH_API_TOU: w.__envapidom + 'v1/elh/tou',
    ELH_API_SET_TOU: w.__envapidom + 'v1/elh/setTou',
    ELH_API_REFERRAL: w.__envapidom + 'v1/elh/referral'
};
#+END_SRC

* Real time net display
** Helpers
*** Example credentials file
#+BEGIN_SRC yaml
---
username: "username"
password: "password"
isPersistent: true
#+END_SRC

*** get credentials
#+NAME: get-credentials
#+BEGIN_SRC ruby :results raw silent :var file="/home/jeff/.credentials/sunpower.yaml"
require 'yaml'
require 'json'
p YAML.load_file(file).to_json
#+END_SRC

*** get json value
#+NAME: get-json-value
#+BEGIN_SRC ruby :results raw silent :var string="" :var name=""
require 'json'
result = JSON.parse(string)
name.split('.').each { |key| result = result[key] }
p result
#+END_SRC

*** pretty-print json
#+NAME: jq
#+BEGIN_SRC emacs-lisp :var data=""
(json-reformat-from-string data)
#+END_SRC

** Authenticate
#+NAME: Authenticate
#+BEGIN_SRC bash  :results raw replace drawer :var credentials=get-credentials(file="/home/jeff/.credentials/sunpower.yaml") :var api="https://elhapi.edp.sunpower.com/v1/elh"
curl -H "Content-Type:application/json" -X POST -d "$credentials" "$api/authenticate"
#+END_SRC

#+RESULTS: Authenticate

** Get Address Activity
#+NAME: AddressActivity
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/activity?async=false"
#+END_SRC

#+RESULTS: AddressActivity
:results:
1565836800000
:end:

** Get Address Alerts
#+NAME: Alerts
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/alerts?async=false"
#+END_SRC

#+RESULTS: Alerts
:results:
[]
:end:

** Get Address Components
#+NAME: Components
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/components"
#+END_SRC

#+RESULTS: Components

** Get Address Power
Returns the "current" power.  The time of the reading is not specified, and I've noticed these are often quite stale.

#+NAME: AddressPower
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/power?async=false"
#+END_SRC

#+RESULTS: AddressPower
:results:
{
    "CurrentConsumption": 0,
    "CurrentProduction": 3.096
}
:end:

** Get Address Energy Hour
#+NAME: AddressEnergyHour
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/energy/hour?async=false&startepm=1565805600000"
#+END_SRC

#+RESULTS: AddressEnergyHour
:results:
[
    "2019-08-14T11:00:00,4.95,",
    "2019-08-14T12:00:00,5.83,",
    "2019-08-14T13:00:00,5.78,",
    "2019-08-14T14:00:00,6.40,",
    "2019-08-14T15:00:00,6.69,",
    "2019-08-14T17:00:00,9.27,",
    "2019-08-14T18:00:00,1.88,",
    "2019-08-14T19:00:00,1.60,"
]
:end:


The payload is an array of string records.
Each record has the following comma-separated fields:
| timestamp of sample | YYYY-MM-DDTHH:MM:SS |
| energy produced     | _float_ kWh         |

** Get Address Energy Minute
#+NAME: AddressEnergyMinute
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/address/$address/energy/minute?endepm=1565827200000&startepm=1565740800000"
#+END_SRC

#+RESULTS: AddressEnergyMinute
:results:
[
    "2019-08-14T00:10:00,0.00,",
    "2019-08-14T00:15:00,0.00,",
    "2019-08-14T00:25:00,0.00,",
    "2019-08-14T00:30:00,0.00,",
    "2019-08-14T00:35:00,0.00,",
    "2019-08-14T00:40:00,0.00,",
    "2019-08-14T00:50:00,0.00,",
    "2019-08-14T00:55:00,0.00,",
    "2019-08-14T01:10:00,0.00,",
    "2019-08-14T01:20:00,0.00,",
    "2019-08-14T01:25:00,0.00,",
    "2019-08-14T01:30:00,0.00,",
    "2019-08-14T01:35:00,0.00,",
    "2019-08-14T01:40:00,0.00,",
    "2019-08-14T01:45:00,0.00,",
    "2019-08-14T01:50:00,0.00,",
    "2019-08-14T02:00:00,0.00,",
    "2019-08-14T02:05:00,0.00,",
    "2019-08-14T02:15:00,0.00,",
    "2019-08-14T02:25:00,0.00,",
    "2019-08-14T02:30:00,0.00,",
    "2019-08-14T02:35:00,0.00,",
    "2019-08-14T02:50:00,0.00,",
    "2019-08-14T02:55:00,0.00,",
    "2019-08-14T03:20:00,0.00,",
    "2019-08-14T03:25:00,0.00,",
    "2019-08-14T03:30:00,0.00,",
    "2019-08-14T03:35:00,0.00,",
    "2019-08-14T03:50:00,0.00,",
    "2019-08-14T03:55:00,0.00,",
    "2019-08-14T04:00:00,0.00,",
    "2019-08-14T04:15:00,0.00,",
    "2019-08-14T05:15:00,0.00,",
    "2019-08-14T05:20:00,0.00,",
    "2019-08-14T05:25:00,0.00,",
    "2019-08-14T05:55:00,0.00,",
    "2019-08-14T06:05:00,0.00,",
    "2019-08-14T07:00:00,0.01,",
    "2019-08-14T07:05:00,0.01,",
    "2019-08-14T07:20:00,0.03,",
    "2019-08-14T07:25:00,0.02,",
    "2019-08-14T07:30:00,0.02,",
    "2019-08-14T07:35:00,0.02,",
    "2019-08-14T07:40:00,0.01,",
    "2019-08-14T08:50:00,0.73,",
    "2019-08-14T08:55:00,0.11,",
    "2019-08-14T09:05:00,0.12,",
    "2019-08-14T09:15:00,0.25,",
    "2019-08-14T09:20:00,0.14,",
    "2019-08-14T09:25:00,0.14,",
    "2019-08-14T09:30:00,0.14,",
    "2019-08-14T09:45:00,0.16,",
    "2019-08-14T09:50:00,0.16,",
    "2019-08-14T10:05:00,0.55,",
    "2019-08-14T10:25:00,0.94,",
    "2019-08-14T10:30:00,0.28,",
    "2019-08-14T10:50:00,1.28,",
    "2019-08-14T10:55:00,0.35,",
    "2019-08-14T11:05:00,0.75,",
    "2019-08-14T11:25:00,0.41,",
    "2019-08-14T11:35:00,0.84,",
    "2019-08-14T11:50:00,1.31,",
    "2019-08-14T12:40:00,4.77,",
    "2019-08-14T12:45:00,0.50,",
    "2019-08-14T13:05:00,2.04,",
    "2019-08-14T13:10:00,0.52,",
    "2019-08-14T13:15:00,0.52,",
    "2019-08-14T13:20:00,0.53,",
    "2019-08-14T13:25:00,0.53,",
    "2019-08-14T13:30:00,0.53,",
    "2019-08-14T13:35:00,0.53,",
    "2019-08-14T14:50:00,8.00,",
    "2019-08-14T15:00:00,1.05,",
    "2019-08-14T15:30:00,3.11,",
    "2019-08-14T15:35:00,0.51,",
    "2019-08-14T17:10:00,6.54,",
    "2019-08-14T17:30:00,1.44,",
    "2019-08-14T17:35:00,0.34,",
    "2019-08-14T17:40:00,0.33,",
    "2019-08-14T17:50:00,0.62,",
    "2019-08-14T18:00:00,0.59,",
    "2019-08-14T18:25:00,1.29,"
]
:end:

The payload is an array of string records.
Each record has the following comma-separated fields:
| timestamp of sample | YYYY-MM-DDTHH:MM:SS |
| energy produced     | _float_ kWh         |

** Get WiFi Status (Device Status)
#+NAME: WiFiStatus
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var address=get-json-value(string=Authenticate,name="addressId") :var api="https://elhapi.edp.sunpower.com/v1/elh" :post jq(data=*this*)
curl --silent --header "Authorization: SP-CUSTOM $token" "$api/wifi/status?cacheBreaker=1565824273640&serialNumber=ZT163185000441C1876"
#+END_SRC

#+RESULTS: WiFiStatus
** Session Logout
#+NAME: SessionLogout
#+BEGIN_SRC sh :results raw replace drawer :var token=get-json-value(string=Authenticate,name="tokenID") :var api="https://elhapi.edp.sunpower.com/v1/elh"
curl --silent -X DELETE --header "Authorization: SP-CUSTOM $token" "$api/session"
#+END_SRC

#+RESULTS: SessionLogout
:results:
:end:
